===========================================================================

  Vimba for Linux x86 - Release Notes

  Version: 4.0
  Date:    May 2020
===========================================================================

--------------------------------
Components and Version Reference
--------------------------------

Vimba GenICam Transport Layer modules
-------------------------------------
  GigE Transport Layer (VimbaGigETL.cti)                1.7.1*
  USB Transport Layer (VimbaUSBTL.cti)                  1.2.1*

APIs
----
  Vimba C API (libVimbaC.so)                            1.8.2*
  Vimba C++ API (libVimbaCPP.so)                        1.8.2*
  Vimba Python API (VimbaPython.so)                     1.0.0*
  Image Transform Library (libVimbaImageTransform.so)   1.6.0

Tools
-----
  Vimba Viewer (VimbaViewer)                            2.3.0*
  Vimba Class Generator (VimbaClassGenerator)           1.0.6
  Vimba Firmware Updater (VimbaFirmwareUpdater.exe)     1.0.3
  Vimba Firmware Updater Console (FWUpdaterConsole.exe) 1.0.1

Third Party Libraries
---------------------
  TinyXML (not shipped with Vimba)                      2.6.2
  Qt                                                    4.8.4
  Qwt                                                   6.1.3
  libTIFF                                               4.0.7
  OpenCV                                                3.0.0  

* Changed in this release of Vimba


---------------------
Hardware Requirements
---------------------
PC or laptop with 1 GHz 32-bit or 64-bit x86 processor or better.

When using Allied Vision GigE cameras, a built-in Gigabit Ethernet network interface
or Gigabit Ethernet network card (one or more) is required.

  Note for IP configuration:
  By default, IP Configuration Mode is set to DHCP. 
  You can also select LLA (link-local address) if you connect just one camera. 
  If multiple cameras are connected at the same time, we recommend using 
  DHCP or Persistent IP Address to enable discovery of all cameras.


Furthermore, when using Allied Vision USB cameras, a built-in USB 3.0
controller for PCI Express bus is required.


------------------------
Tested Operating Systems
------------------------
Allied Vision Vimba has been tested with the following operating systems:

Ubuntu 18.04 LTS (64-bit)
Debian 10 (32-bit and 64-bit)
Debian 9 (32-bit and 64-bit)

In most cases, Vimba is also compatible to higher versions or other distributions. 
Updates on tested operating systems are published on the Vimba webpage: 
https://www.alliedvision.com/en/products/software.html

Please note that IEEE 1394 and Camera Link support is not available for Linux.


------------
Installation
------------
Allied Vision Vimba comes as a tarball. In order to set up Vimba, follow these steps:

  - Uncompress the archive with the command tar -xf ./Vimba.tgz to a
    directory you have writing privileges for like /opt. Under this directory
    Vimba will be installed in its own folder. In the following, we will refer
    to this path as [InstallDir].
  - Go to [InstallDir]/VimbaGigETL and/or [InstallDir]/VimbaUSBTL and execute the shell
    script Install.sh with super user privileges (e.g., sudo ./Install.sh). This
    registers the GENICAM_GENTL32_PATH and/or the GENICAM_GENTL64_PATH environment
    variable through a startup script in /etc/profile.d so that every GenICam GenTL
    consumer (such as the examples that ship with Allied Vision Vimba) can access the
    Allied Vision Gigabit Ethernet and USB Transport Layers. Please note that this is a
    per-user setting. If transport layers are not found, read:
    https://alliedvision.com/fileadmin/content/documents/products/software/software/Vimba/appnote/Vimba_installation_under_Linux.pdf
  - Reboot computer

Vimba Viewer:
Vimba Viewer can be found in, for example, [InstallDir]/Tools/Viewer/Bin/x86_64bit/.
This program allows you to configure your Allied Vision cameras and capture images.
Ubuntu 18.04 LTS: 
  - To build Vimba Viewer, install the libcanberra-gtk-module
    apt-get install libcanberra-gtk-module

In order to change the IP configuration of a camera in a foreign subnet,
VimbaViewer must be run with super user privileges
(e.g., sudo -E ./VimbaViewer).
Note that running it as root user instead of using sudo -E requires the
GENICAM_GENTL32_PATH and / or GENICAM_GENTL64_PATH being set for the
root user as well.

Vimba includes many precompiled examples that can be found in
Vimba/VimbaC/Examples/Bin and Vimba/VimbaCPP/Examples/Bin.
If you want to compile these examples yourself, please refer to the Vimba Manual
for instructions and required packages.

For uninstalling Vimba, remove the startup scripts by running the shell scripts
Uninstall.sh as super user. This prevents any GenTL consumer from loading the
Allied Vision Gigabit Ethernet and USB Transport Layers. Then remove the
installation directory.


------------
Known Issues
------------
  - When experiencing trouble with image acquisition, try to increase the priority
    of your application with "sudo -E nice -n -20 <command>".

GigE Transport Layer:
  - A change of the available camera access modes cannot be reported for cameras
    in different subnets or with malconfigured IP addresses. These cameras can
    be accessed in configuration mode from different hosts simultaneously.

Tranport layers not found (Error -16):
  - Please follow the instructions in this document:
    https://alliedvision.com/fileadmin/content/documents/products/software/software/Vimba/appnote/Vimba_installation_under_Linux.pdf

Camera detection:
  - If multiple IP addresses are configured on one physical ethernet adapter, 
    then Vimba sends GVCP discovery requests only to the last added IP address.
    Therefore, the camera is detected only if its IP address was added last.

Vimba Viewer:
  - If a GigE camera was opened and then closed with Vimba Viewer, 
    it is displayed as locked and Vimba Viewer does not open it again.
    Workaround: Close and open Vimba Viewer.
  - When multiple opened GigE cameras are disconnected at the same time
    while no other camera stays connected to the very same NIC,
    the Vimba Viewer's camera windows stay open.


---------------------------
Changes and release history
---------------------------

Changes in Vimba 4.0.0:
-----------------------

Vimba C
  - Bug fixes

Vimba C++
  - Bug fixes

Vimba Python
  - New API

GigETL
  - Improved resend handling 
  - By default, packet resends are enabled
  - Other bug fixes

USBTL
  - Improved visibility of USB camera status
  - Other bug fixes

Vimba GigE Filter Driver
  - Bug fixes

Vimba Viewer
  - Bug fixes


Changes in Vimba 3.1.0:
-----------------------
Vimba C
  - Updated for use with GenTL 1.5

Vimba C++
  - Updated for use with GenTL 1.5

GigETL
  - GenTL 1.5 support

USBTL
  - GenTL 1.5 support

Vimba Viewer
  - Bug fixes


Changes in Vimba 3.0:
-----------------------
Vimba C
  - Bug fixes

Vimba C++
  - Bug fixes

Vimba Viewer
  - Supports Alvium USB cameras
  - Fixed handling of float increments
  - Fixed occasional crashes with high frame rates
  - Several minor bug fixes

GigETL
  - Fixed: GVSPPacketSize now updates as expected

USBTL
  - Bug fixes

Changes in Vimba 2.1.3:
-----------------------
Vimba C
  - Added ActionCommands programming example
  - Vimba C Manual: Updated documentation of Action Commands
  - Prepared the API for use with GenTL 1.5
  - Bug fixes

Vimba C++
  - Added ActionCommands programming example
  - Vimba CPP Manual: Updated documentation of Action Commands
  - Prepared the underlying C API for use with GenTL 1.5
  - Vimba CPP Manual: Added chapter Asynchronous image acquisition - overview
  - Bug fixes

Vimba Viewer
  - New plugin architecture

Vima Setup
   - Removed Vimba Class Generator desktop symbol

Vimba Manual
   - Integrated Vimba Features Manual

Changes in Vimba 2.1:
---------------------
Vimba C
  - Added functionality for Action Commands
  - Bug fixes

Vimba C++
  - Added functionality for Action Commands
  - Bug fixes

Vimba Image Transform Library
  - Support for conversion from 10-bit raw source formats to 16-bit color target formats.
  - Support for conversion from 12-bit raw source formats to 16-bit color target formats.
  - Support for conversion from 14-bit raw source formats to 16-bit color target formats.
  - Support for conversion from 10-bit mono source formats to 16-bit mono target formats.
  - Support for conversion from 12-bit mono source formats to 16-bit mono target formats.
  - Support for conversion from 14-bit mono source formats to 16-bit mono target formats.

Vimba Viewer
  - Allows now saving of 12-bit and 16-bit images (12-bit images are saved in 16-bit containers).
  - Added functionality for Action Commands.
  - Camera list shows the IP address of each device.
  - Bug fixes

GigE Transport Layer
  - The parameter BUFFER_INFO_DELIVERED_IMAGEHEIGHT is filled correctly.
  - Added functionality for Action Commands.
  - Bug fixes

Changes in Vimba 2.0:
---------------------
Vimba Setup
  - Added Vimba Viewer Guide document
  - Improved documents, new layout

Vimba C
  - Added functionality of loading and saving camera settings from / to XML
  - Bug fixes

Vimba C++
  - Added functionality of loading and saving camera settings from / to XML
  - Bug fixes

Vimba Image Transform Library
  - Support for conversion from BayerXX10,12 formats to 2 byte output formats (RGB[A], BGR[A])
  - Added interface functions VmbSetImageInfoFromInputParameters and VmbSetImageInfoFromInputImage

Vimba Viewer
  - Enabled load / save settings functionality
  - Added tabsheet widgets for Brightness, ROI, Autofunction ROI, Trigger IO, Color
  - Bug fixes

USB Transport Layer
  - Minor bug fixes

GigE Transport Layer
  - Reworked and improved filter driver

Vimba Class Generator
  - Changes for Camera Link support (affects Windows only)

Changes in Vimba 1.4.1:
-----------------------
Package for ARMv7
  - Support of USB Transport Layer

Package for other Linux systems
  - Support of USB Transport Layer
  - Improved documentation

Vimba C
  - Extended camera support (e.g. float increments)
  - Stability improvements
  - Improved some examples
  - Bug fixes

Vimba C++
  - Extended camera support (e.g. float increments, needs Vimba C 1.4)
  - Improved error handling
  - Improved some examples
  - Added and improved examples
  - Bug fixes

Vimba Image Transform Library
  - Added support for PFNC 10p and 12p formats
  - Improved the documentation

GigE Transport Layer
  - Improved stability on high traffic networks
  - Bug fixes for multi-camera usage and incomplete cleanup
  - Fixed range of GevHeartbeatInterval and GevHeartbeatTimeout

Vimba Viewer
  - Added open camera by ID
  - Added endianness switch in direct register dialog
  - Many bug fixes

Vimba Class Generator
  - Small improvements

Changes in Vimba 1.3.0:
-----------------------
Package for ARMv7 (new)
  - Support of Vimba C API
  - Support of Vimba C++ API
  - Support of GigE Transport Layer

Package for other Linux systems
  - Added a Vimba Tour document and a Vimba Quickstart Guide
  - Improved the other documents
  - Added examples for Vimba C and C++
  - Added an OpenMP version of the Vimba Image Transform Library

Vimba C 1.3.0
  - Fixed feature access for ancillary data
  - Made device discovery blocking
  - Added system feature GeVDiscoveryAllDuration for adjustable waiting time
  - Fixed issues with mixed feature names
  - Bug-fixes for improving stability

Vimba C++ 1.3.0
  - Fixed feature access for ancillary data
  - Changes caused by bug fixes in Vimba C

Vimba Image Transform Library 1.2.0
  - Allowed more input for VmbSetImageInfoFromString
  - Corrected return codes
  - Removed transformations to Mono10/12/14 and big-endian data

Vimba Viewer 1.1.3
  - Improved handling for GigE camera list changes
  - Fixed issues around saving images
  - GUI usage improvements

GigE Transport Layer 1.3.1
  - Fixed GenTL compliance: Changed the Device ID from the serial number
    to a MAC-based ID. This changes the way all APIs (C, C++ and .Net)
    identify the cameras
  - Added a document for GigE camera features
  - Changed the supported GenTL version to 1.3 (e.g. new feature categories
    BufferHandlingMode and StreamInformation)
  - Separate features for heartbeat timeout and heartbeat interval
  - Adjustable device discovery waiting time
  - Fixed issues with similar serial numbers
  - Fixed issues with many network interfaces

Vimba Class Generator
  - Minor changes to appearance and documentation

Changes in Vimba 1.2.0:
-----------------------
Vimba C 1.2.0
  - Version 1.2.0 is only compatible to AVT GigE TL Version 1.2.0 onwards
  - Name independent search for AVT transport layers
  - Made EnumEntries' "pIsImplemented" condition equivalent to "pIsAvailable"
    to mimic the behavior of GenICam reference implementation

Vimba C++ 1.2.0
  - Fix for opening camera by IP address

Vimba .NET 1.2.0
  - Fix for 64bit version attempting to load 32bit transport layers
  - Fix for opening camera by IP address

Vimba Viewer 1.1.1
  - SFNC Features directly beneath the root category get listed
  - Many new pixel formats available for histogram support

GigE Transport Layer 1.2.0
  - Improved performance in case of many events
  - Restriction to eight cameras removed
  - Corrected Heartbeat feature
  - Fixed support for small packets

  
----------------------------------------
Allied Vision Technical Support
----------------------------------------
Contact us:
https://www.alliedvision.com/contact
